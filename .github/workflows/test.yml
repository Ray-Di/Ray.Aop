name: "Code Test"

on:
  ["pull_request", "push", "workflow_dispatch"]

jobs:
  standard:
    name: "Standard Test"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - "7.2"
          - "7.3"
          - "7.4"

    steps:
      - name: "Setup PHP ${{ matrix.php-version }}"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: ${{ matrix.php-version }}

      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Validate composer.json and composer.lock"
        run: "composer validate"

      - name: "composer self-update"
        run: "composer self-update"

      - name: "Get composer cache directory"
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@v2
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "Install dependencies with Composer"
        run: "composer install --no-interaction --no-progress --prefer-dist"

      - name: "Test"
        run: "./vendor/bin/phpunit"

      - name: "Run demo"
        run: "php ./demo/run.php"

  lowest_dependencies:
    name: "Lowest dependencies Test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - "7.4"
    steps:
      - name: "Setup PHP ${{ matrix.php-version }}"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none

      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Validate composer.json and composer.lock"
        run: "composer validate"

      - name: "composer self-update"
        run: "composer self-update"

      - name: "Get composer cache directory"
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@v2
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "Install dependencies with Composer"
        run: "composer install --no-interaction --no-progress --prefer-dist"

      - name: "Update lowest dependencies with Composer"
        run: "composer update --prefer-dist --prefer-lowest"

      - name: "Test"
        run: "./vendor/bin/phpunit"

      - name: "Run demo"
        run: "php ./demo/run.php"

  nightly:
    name: "Nightly Test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - "nightly"
    steps:
      - name: "Setup PHP ${{ matrix.php-version }}"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none

      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Validate composer.json and composer.lock"
        run: "composer validate"

      - name: "composer self-update"
        run: "composer self-update"

      - name: "Get composer cache directory"
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache composer dependencies"
        uses: actions/cache@v2
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "Install dependencies with Composer"
        run: "composer install --no-interaction --no-progress --prefer-dist --ignore-platform-reqs"

      - name: "Test"
        run: "./vendor/bin/phpunit"
        continue-on-error: true

      - name: "Run demo"
        run: "php ./demo/run.php"
        continue-on-error: true
